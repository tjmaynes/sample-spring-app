plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.60'
    id "org.jetbrains.kotlin.kapt" version "1.3.60"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.60"
}

allprojects {
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-kapt'

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/snapshot' }
        maven { url "https://dl.bintray.com/arrow-kt/arrow-kt/" }
    }

    dependencies {
        implementation platform('org.jetbrains.kotlin:kotlin-bom')
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation "org.jetbrains.kotlin:kotlin-reflect"
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor:1.3.3'
        testImplementation 'io.projectreactor:reactor-test:3.3.1.RELEASE'

        implementation "io.arrow-kt:arrow-core:0.10.4"
        implementation "io.arrow-kt:arrow-syntax:0.10.4"
        implementation "io.arrow-kt:arrow-fx:0.10.4"
        kapt "io.arrow-kt:arrow-meta:0.10.4"

        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.5.2"
        testImplementation "org.junit.jupiter:junit-jupiter-api:5.5.2"
        testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = '1.8'
            //Will retain parameter names for Java reflection
            javaParameters = true
        }
    }

    compileTestKotlin {
        kotlinOptions {
            jvmTarget = '1.8'
            javaParameters = true
        }
    }

    task stage {
        dependsOn build
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
    }

    tasks.withType(JavaCompile){
        options.encoding = "UTF-8"
        options.compilerArgs.add('-jvm-target 1.8')
    }
}